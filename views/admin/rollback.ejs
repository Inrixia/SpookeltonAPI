<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Admin Rollback</title>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.0.4/socket.io.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.20.1/moment-with-locales.min.js"></script>
    <script>
      const socket = io();
      $(document).ready(function() {
        socket.emit('get_server_archives', {server: JSON.parse($('#serverList option:selected').val()).backup_folder, limit: -1})
        socket.emit('get_server_playerdata_files', JSON.parse($('#serverList option:selected').val()).server_folder)
        $('#serverList').on('change', function() {
          socket.emit('get_server_archives', {server: JSON.parse(this.value).backup_folder, limit: -1})
          socket.emit('get_server_playerdata_files', JSON.parse(this.value).server_folder)
        })
        socket.on('return_server_archives', function(archives) {
          $("#zipList").empty(); // remove old options
          $.each(archives, function(key,value) {
            $("#zipList").append($("<option></option>").attr("value", value.dir).text(value.fromNow + ' | ' + moment(value.date).format('dddd Do, MMM YYYY | hh:mm a')));
          });
        })

        $('#rollbackType').on('change', function() {
          if (this.value == 'playerdata') {
            socket.emit('get_server_playerdata_files', JSON.parse($('#serverList option:selected').val()).server_folder)
          } else {
            $("#players").empty();
          }
        })
        socket.on('return_server_playerdata_files', function(players) {
          $("#players").empty(); // remove old options
          $("#files").empty();
          players.forEach(function(player) {
            $("#players").append($("<option></option>").attr("value", JSON.stringify({uuid: player.UUID, name: player._id})).text(player._id));
          });
        })

        $('#players').on('change', function() {
          socket.emit('get_rollback_files', {playerArray: $('#players').val(), serverDir: JSON.parse($('#serverList option:selected').val()).server_folder})
        })

        socket.on('return_get_rollback_files', function(playerArray){
          $("#files").empty(); // remove old options
          playerArray.forEach(function(player) {
            player.files.forEach(function(file) {
              $("#files").append($("<option></option>").attr("value", file.replace(JSON.parse($('#serverList option:selected').val()).server_folder, '')).text(file));
            })
          });
        })

        $('#rollback').on('click', function() {
          socket.emit('rollback_files', {
            zip: $('#zipList option:selected').val(),
            server: JSON.parse($('#serverList option:selected').val()).server_folder,
            files: $('#files').val()
          })
        })

        socket.on('return_rollback_files', function(response) {
          alert(JSON.stringify(response));
        })
      });
    </script>
  </head>

  <body>
    <p>Select Server</p>
    <select id='serverList'>
      <% servers.forEach(function(folder) { %>
        <option value='{"backup_folder":"<%- folder.backup_folder %>", "server_folder":"<%- folder.server %>"}'><%- folder.server + ' || ' + folder.backup_folder %></option>
      <% }) %>
    </select>
    <p>Select Archive</p>
    <select id="zipList"></select>
    <p>Select Rollback Type</p>
    <select id="rollbackType">
      <option value='playerdata'>Playerdata</option>
      <option value='region'>Region [WIP]</option>
    </select>
    <p>Select Players (Ctrl-Click for Multiple) | Files to rollback: </p>
    <select style='min-height:500px; min-width: 200px;' multiple id="players"></select>
    <select style='min-height:500px; min-width: 200px;' multiple id="files"></select>
    <br>
    <button id='rollback' type="button">ROLLBACK</button>
  </body>
</html>
